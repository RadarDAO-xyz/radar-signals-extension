{"version":3,"file":"static/js/background.js","mappings":"AAiJAA,OAAOC,KAAKC,MAAM,CAACC,QAAQ,EAAMC,eAAe,IAAM,SAASH,GAC3DD,OAAOC,KAAKI,YAAYJ,EAAK,GAAGK,GAAI,CAACC,SAAU,UAAU,SAASC,GAC9DC,QAAQC,IAAIF","sources":["utils/background.ts"],"sourcesContent":["\n// const DISCORD_URI_ENDPOINT = 'https://discord.com/api/oauth2/authorize';\n// const CLIENT_ID = encodeURIComponent('977622655626797096');\n// const RESPONSE_TYPE = encodeURIComponent('code');\n// const REDIRECT_URI = encodeURIComponent('https://fkipongejlaaachjiaipijmmnhcacbca.chromiumapp.org');\n// const SCOPE = encodeURIComponent('identify guilds');\n// const BASE_URL = \"https://radar-signal-be.herokuapp.com\";\n\n// function create_auth_endpoint() {\n//     let nonce = encodeURIComponent(Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15));\n//     let endpoint_url = `${DISCORD_URI_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=${SCOPE}&nonce=${nonce}`;\n//     return endpoint_url;\n// }\n\n// const getAccessToken = async (code: string) => {\n//     const response = await fetch(`${BASE_URL}/authorize`, {\n//         method: 'POST',\n//         body: JSON.stringify({\n//             code\n//         }),\n//         mode: \"cors\", \n//         'credentials': 'include',\n//         headers: {\n//             'Access-Control-Allow-Origin': '*',\n//             'Content-Type': 'application/json',\n//         }\n//     });\n//     console.log(response);\n//     const json = await response.json();\n//     console.log(json);\n//     return json;\n// }\n\n// const submitSignal = async (token:string, signalMessage: string, channelId:string, url: string) => {\n//     console.log(signalMessage, channelId)\n//     chrome.tabs.query({\n//         active: true,\n//         currentWindow: true\n//       }, async function(tabs) {\n//         var tab = tabs[0];\n//         var fiurl = tab.url;\n\n//     const response = await fetch(`${BASE_URL}/submitSignal`, {\n//         method: 'POST',\n//         body: JSON.stringify({\n//             message: `${signalMessage}`,\n//             channelId,\n//             url: fiurl\n//         }),\n//         mode: \"cors\", \n//         'credentials': 'include',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${token}`,\n//             'Access-Control-Allow-Origin': '*'\n//         }\n//     });\n\n//     const json = await response.json();\n//     return json;\n// });\n// }\n\n\n// const getProfile = async (token: string) => {\n//     const response = await fetch(`${BASE_URL}/profile`, {\n//         method: 'GET',\n//         'credentials': 'include',\n//         mode: \"cors\",      \n//         headers: {\n//             'Authorization': `Bearer ${token}`,\n//             'Access-Control-Allow-Origin': '*'\n//         }\n//     });\n//     const json = await response.json();\n//     console.log(json);\n//     return json\n// }\n\n\n// chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n//     if (request.message === 'LOGIN') {\n//         chrome.identity.launchWebAuthFlow({\n//             url: create_auth_endpoint(),\n//             interactive: true\n//         }, function (redirect_uri) {\n//             console.log(redirect_uri);\n//             if (chrome.runtime.lastError || redirect_uri?.includes('access_denied')) {\n//                 console.log(\"Could not authenticate.\");\n//                 sendResponse('fail');\n//             } else {\n//                 const code = redirect_uri!.split('=')[1];\n//                 getAccessToken(code).then(json => {\n//                     console.log(json);\n//                     if(json) {\n//                         sendResponse({ type: \"success\", data: json });\n//                     }else {\n//                         sendResponse({type: 'failed' });\n//                     }\n//                 }).catch(err => {\n//                     console.log(err);\n//                     sendResponse('fail');\n//                 })\n//             }\n//         });\n//     }\n\n//     if(request.message === 'AUTHENTICATE') {\n//         getProfile(request.token).then(json => {\n//             console.log(json);\n//             sendResponse({ type: \"success\", data: json });\n//         }).catch(err => {\n//             console.log(err);\n//             sendResponse({type: 'failed' });\n//         });\n//     }\n\n//     if (request.message === 'SEND_SIGNAL') { \n//         submitSignal(request.token,request.signalMessage,request.channelId, request.url).then(json=>{\n//             console.log(json);\n//             sendResponse('success');\n//         }).catch(err => {\n//             console.log(err);\n//             sendResponse('fail');\n//         });\n\n//     }\n//     return true;\n\n// });\n\n// Called when the user clicks on the browser action\n// chrome.action.onClicked.addListener(function(tab) {\n//     console.log(tab);\n//     // Send a message to the active tab\n//     chrome.tabs.query({active: true, currentWindow:true},\n//        function(tabs) {\n//           var activeTab = tabs[0];\n//           console.log(activeTab);\n//           chrome.tabs.sendMessage(activeTab.id, \n//               {\"message\": \"clicked_browser_action\"}\n//           );\n//     });\n//  });\n\nchrome.tabs.query({active: true, currentWindow: true},function(tabs) {\n    chrome.tabs.sendMessage(tabs[0].id, {greeting: \"hello\"}, function(response) {\n        console.log(response);\n    });\n  }); \n\n"],"names":["chrome","tabs","query","active","currentWindow","sendMessage","id","greeting","response","console","log"],"sourceRoot":""}